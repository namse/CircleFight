// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packet_type.proto

#ifndef PROTOBUF_packet_5ftype_2eproto__INCLUDED
#define PROTOBUF_packet_5ftype_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_packet_5ftype_2eproto();
void protobuf_AssignDesc_packet_5ftype_2eproto();
void protobuf_ShutdownFile_packet_5ftype_2eproto();

class LoginRequest;
class LoginResult;
class LoginBroadcastResult;
class ColorChangeRequest;
class ResponeBroadcastResult;
class AngleChangeRequest;
class AngleChangeBroadcastResult;
class MoveKeyPressRequest;
class MoveResult;
class MoveStopResult;
class AttackKeyPressRequest;
class AttackBroadcastResult;
class HPChangeResult;

// ===================================================================

class LoginRequest : public ::google::protobuf::Message {
 public:
  LoginRequest();
  virtual ~LoginRequest();

  LoginRequest(const LoginRequest& from);

  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRequest& default_instance();

  void Swap(LoginRequest* other);

  // implements Message ----------------------------------------------

  LoginRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRequest& from);
  void MergeFrom(const LoginRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LoginRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_packet_5ftype_2eproto();
  friend void protobuf_AssignDesc_packet_5ftype_2eproto();
  friend void protobuf_ShutdownFile_packet_5ftype_2eproto();

  void InitAsDefaultInstance();
  static LoginRequest* default_instance_;
};
// -------------------------------------------------------------------

class LoginResult : public ::google::protobuf::Message {
 public:
  LoginResult();
  virtual ~LoginResult();

  LoginResult(const LoginResult& from);

  inline LoginResult& operator=(const LoginResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginResult& default_instance();

  void Swap(LoginResult* other);

  // implements Message ----------------------------------------------

  LoginResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginResult& from);
  void MergeFrom(const LoginResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginResult)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 player_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_packet_5ftype_2eproto();
  friend void protobuf_AssignDesc_packet_5ftype_2eproto();
  friend void protobuf_ShutdownFile_packet_5ftype_2eproto();

  void InitAsDefaultInstance();
  static LoginResult* default_instance_;
};
// -------------------------------------------------------------------

class LoginBroadcastResult : public ::google::protobuf::Message {
 public:
  LoginBroadcastResult();
  virtual ~LoginBroadcastResult();

  LoginBroadcastResult(const LoginBroadcastResult& from);

  inline LoginBroadcastResult& operator=(const LoginBroadcastResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginBroadcastResult& default_instance();

  void Swap(LoginBroadcastResult* other);

  // implements Message ----------------------------------------------

  LoginBroadcastResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginBroadcastResult& from);
  void MergeFrom(const LoginBroadcastResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // required float position_x = 2;
  inline bool has_position_x() const;
  inline void clear_position_x();
  static const int kPositionXFieldNumber = 2;
  inline float position_x() const;
  inline void set_position_x(float value);

  // required float position_y = 3;
  inline bool has_position_y() const;
  inline void clear_position_y();
  static const int kPositionYFieldNumber = 3;
  inline float position_y() const;
  inline void set_position_y(float value);

  // required float velocity_x = 4;
  inline bool has_velocity_x() const;
  inline void clear_velocity_x();
  static const int kVelocityXFieldNumber = 4;
  inline float velocity_x() const;
  inline void set_velocity_x(float value);

  // required float velocity_y = 5;
  inline bool has_velocity_y() const;
  inline void clear_velocity_y();
  static const int kVelocityYFieldNumber = 5;
  inline float velocity_y() const;
  inline void set_velocity_y(float value);

  // required float angle = 6;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 6;
  inline float angle() const;
  inline void set_angle(float value);

  // required int32 color = 7;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 7;
  inline ::google::protobuf::int32 color() const;
  inline void set_color(::google::protobuf::int32 value);

  // required int32 size = 8;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 8;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginBroadcastResult)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_position_x();
  inline void clear_has_position_x();
  inline void set_has_position_y();
  inline void clear_has_position_y();
  inline void set_has_velocity_x();
  inline void clear_has_velocity_x();
  inline void set_has_velocity_y();
  inline void clear_has_velocity_y();
  inline void set_has_angle();
  inline void clear_has_angle();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_size();
  inline void clear_has_size();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 player_id_;
  float position_x_;
  float position_y_;
  float velocity_x_;
  float velocity_y_;
  float angle_;
  ::google::protobuf::int32 color_;
  ::google::protobuf::int32 size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_packet_5ftype_2eproto();
  friend void protobuf_AssignDesc_packet_5ftype_2eproto();
  friend void protobuf_ShutdownFile_packet_5ftype_2eproto();

  void InitAsDefaultInstance();
  static LoginBroadcastResult* default_instance_;
};
// -------------------------------------------------------------------

class ColorChangeRequest : public ::google::protobuf::Message {
 public:
  ColorChangeRequest();
  virtual ~ColorChangeRequest();

  ColorChangeRequest(const ColorChangeRequest& from);

  inline ColorChangeRequest& operator=(const ColorChangeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ColorChangeRequest& default_instance();

  void Swap(ColorChangeRequest* other);

  // implements Message ----------------------------------------------

  ColorChangeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ColorChangeRequest& from);
  void MergeFrom(const ColorChangeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 color = 1;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 1;
  inline ::google::protobuf::int32 color() const;
  inline void set_color(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ColorChangeRequest)
 private:
  inline void set_has_color();
  inline void clear_has_color();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 color_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_packet_5ftype_2eproto();
  friend void protobuf_AssignDesc_packet_5ftype_2eproto();
  friend void protobuf_ShutdownFile_packet_5ftype_2eproto();

  void InitAsDefaultInstance();
  static ColorChangeRequest* default_instance_;
};
// -------------------------------------------------------------------

class ResponeBroadcastResult : public ::google::protobuf::Message {
 public:
  ResponeBroadcastResult();
  virtual ~ResponeBroadcastResult();

  ResponeBroadcastResult(const ResponeBroadcastResult& from);

  inline ResponeBroadcastResult& operator=(const ResponeBroadcastResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponeBroadcastResult& default_instance();

  void Swap(ResponeBroadcastResult* other);

  // implements Message ----------------------------------------------

  ResponeBroadcastResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponeBroadcastResult& from);
  void MergeFrom(const ResponeBroadcastResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // required float position_x = 2;
  inline bool has_position_x() const;
  inline void clear_position_x();
  static const int kPositionXFieldNumber = 2;
  inline float position_x() const;
  inline void set_position_x(float value);

  // required float position_y = 3;
  inline bool has_position_y() const;
  inline void clear_position_y();
  static const int kPositionYFieldNumber = 3;
  inline float position_y() const;
  inline void set_position_y(float value);

  // required float velocity_x = 4;
  inline bool has_velocity_x() const;
  inline void clear_velocity_x();
  static const int kVelocityXFieldNumber = 4;
  inline float velocity_x() const;
  inline void set_velocity_x(float value);

  // required float velocity_y = 5;
  inline bool has_velocity_y() const;
  inline void clear_velocity_y();
  static const int kVelocityYFieldNumber = 5;
  inline float velocity_y() const;
  inline void set_velocity_y(float value);

  // required float angle = 6;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 6;
  inline float angle() const;
  inline void set_angle(float value);

  // required int32 color = 7;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 7;
  inline ::google::protobuf::int32 color() const;
  inline void set_color(::google::protobuf::int32 value);

  // required int32 size = 8;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 8;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ResponeBroadcastResult)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_position_x();
  inline void clear_has_position_x();
  inline void set_has_position_y();
  inline void clear_has_position_y();
  inline void set_has_velocity_x();
  inline void clear_has_velocity_x();
  inline void set_has_velocity_y();
  inline void clear_has_velocity_y();
  inline void set_has_angle();
  inline void clear_has_angle();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_size();
  inline void clear_has_size();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 player_id_;
  float position_x_;
  float position_y_;
  float velocity_x_;
  float velocity_y_;
  float angle_;
  ::google::protobuf::int32 color_;
  ::google::protobuf::int32 size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_packet_5ftype_2eproto();
  friend void protobuf_AssignDesc_packet_5ftype_2eproto();
  friend void protobuf_ShutdownFile_packet_5ftype_2eproto();

  void InitAsDefaultInstance();
  static ResponeBroadcastResult* default_instance_;
};
// -------------------------------------------------------------------

class AngleChangeRequest : public ::google::protobuf::Message {
 public:
  AngleChangeRequest();
  virtual ~AngleChangeRequest();

  AngleChangeRequest(const AngleChangeRequest& from);

  inline AngleChangeRequest& operator=(const AngleChangeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AngleChangeRequest& default_instance();

  void Swap(AngleChangeRequest* other);

  // implements Message ----------------------------------------------

  AngleChangeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AngleChangeRequest& from);
  void MergeFrom(const AngleChangeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float angle = 1;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 1;
  inline float angle() const;
  inline void set_angle(float value);

  // @@protoc_insertion_point(class_scope:AngleChangeRequest)
 private:
  inline void set_has_angle();
  inline void clear_has_angle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float angle_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_packet_5ftype_2eproto();
  friend void protobuf_AssignDesc_packet_5ftype_2eproto();
  friend void protobuf_ShutdownFile_packet_5ftype_2eproto();

  void InitAsDefaultInstance();
  static AngleChangeRequest* default_instance_;
};
// -------------------------------------------------------------------

class AngleChangeBroadcastResult : public ::google::protobuf::Message {
 public:
  AngleChangeBroadcastResult();
  virtual ~AngleChangeBroadcastResult();

  AngleChangeBroadcastResult(const AngleChangeBroadcastResult& from);

  inline AngleChangeBroadcastResult& operator=(const AngleChangeBroadcastResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AngleChangeBroadcastResult& default_instance();

  void Swap(AngleChangeBroadcastResult* other);

  // implements Message ----------------------------------------------

  AngleChangeBroadcastResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AngleChangeBroadcastResult& from);
  void MergeFrom(const AngleChangeBroadcastResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // required float angle = 2;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 2;
  inline float angle() const;
  inline void set_angle(float value);

  // @@protoc_insertion_point(class_scope:AngleChangeBroadcastResult)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_angle();
  inline void clear_has_angle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 player_id_;
  float angle_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_packet_5ftype_2eproto();
  friend void protobuf_AssignDesc_packet_5ftype_2eproto();
  friend void protobuf_ShutdownFile_packet_5ftype_2eproto();

  void InitAsDefaultInstance();
  static AngleChangeBroadcastResult* default_instance_;
};
// -------------------------------------------------------------------

class MoveKeyPressRequest : public ::google::protobuf::Message {
 public:
  MoveKeyPressRequest();
  virtual ~MoveKeyPressRequest();

  MoveKeyPressRequest(const MoveKeyPressRequest& from);

  inline MoveKeyPressRequest& operator=(const MoveKeyPressRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveKeyPressRequest& default_instance();

  void Swap(MoveKeyPressRequest* other);

  // implements Message ----------------------------------------------

  MoveKeyPressRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoveKeyPressRequest& from);
  void MergeFrom(const MoveKeyPressRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool move_key_w_press = 1;
  inline bool has_move_key_w_press() const;
  inline void clear_move_key_w_press();
  static const int kMoveKeyWPressFieldNumber = 1;
  inline bool move_key_w_press() const;
  inline void set_move_key_w_press(bool value);

  // required bool move_key_a_press = 2;
  inline bool has_move_key_a_press() const;
  inline void clear_move_key_a_press();
  static const int kMoveKeyAPressFieldNumber = 2;
  inline bool move_key_a_press() const;
  inline void set_move_key_a_press(bool value);

  // required bool move_key_s_press = 3;
  inline bool has_move_key_s_press() const;
  inline void clear_move_key_s_press();
  static const int kMoveKeySPressFieldNumber = 3;
  inline bool move_key_s_press() const;
  inline void set_move_key_s_press(bool value);

  // required bool move_key_d_press = 4;
  inline bool has_move_key_d_press() const;
  inline void clear_move_key_d_press();
  static const int kMoveKeyDPressFieldNumber = 4;
  inline bool move_key_d_press() const;
  inline void set_move_key_d_press(bool value);

  // @@protoc_insertion_point(class_scope:MoveKeyPressRequest)
 private:
  inline void set_has_move_key_w_press();
  inline void clear_has_move_key_w_press();
  inline void set_has_move_key_a_press();
  inline void clear_has_move_key_a_press();
  inline void set_has_move_key_s_press();
  inline void clear_has_move_key_s_press();
  inline void set_has_move_key_d_press();
  inline void clear_has_move_key_d_press();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool move_key_w_press_;
  bool move_key_a_press_;
  bool move_key_s_press_;
  bool move_key_d_press_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_packet_5ftype_2eproto();
  friend void protobuf_AssignDesc_packet_5ftype_2eproto();
  friend void protobuf_ShutdownFile_packet_5ftype_2eproto();

  void InitAsDefaultInstance();
  static MoveKeyPressRequest* default_instance_;
};
// -------------------------------------------------------------------

class MoveResult : public ::google::protobuf::Message {
 public:
  MoveResult();
  virtual ~MoveResult();

  MoveResult(const MoveResult& from);

  inline MoveResult& operator=(const MoveResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveResult& default_instance();

  void Swap(MoveResult* other);

  // implements Message ----------------------------------------------

  MoveResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoveResult& from);
  void MergeFrom(const MoveResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // required float position_x = 2;
  inline bool has_position_x() const;
  inline void clear_position_x();
  static const int kPositionXFieldNumber = 2;
  inline float position_x() const;
  inline void set_position_x(float value);

  // required float position_y = 3;
  inline bool has_position_y() const;
  inline void clear_position_y();
  static const int kPositionYFieldNumber = 3;
  inline float position_y() const;
  inline void set_position_y(float value);

  // required float velocity_x = 4;
  inline bool has_velocity_x() const;
  inline void clear_velocity_x();
  static const int kVelocityXFieldNumber = 4;
  inline float velocity_x() const;
  inline void set_velocity_x(float value);

  // required float velocity_y = 5;
  inline bool has_velocity_y() const;
  inline void clear_velocity_y();
  static const int kVelocityYFieldNumber = 5;
  inline float velocity_y() const;
  inline void set_velocity_y(float value);

  // @@protoc_insertion_point(class_scope:MoveResult)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_position_x();
  inline void clear_has_position_x();
  inline void set_has_position_y();
  inline void clear_has_position_y();
  inline void set_has_velocity_x();
  inline void clear_has_velocity_x();
  inline void set_has_velocity_y();
  inline void clear_has_velocity_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 player_id_;
  float position_x_;
  float position_y_;
  float velocity_x_;
  float velocity_y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_packet_5ftype_2eproto();
  friend void protobuf_AssignDesc_packet_5ftype_2eproto();
  friend void protobuf_ShutdownFile_packet_5ftype_2eproto();

  void InitAsDefaultInstance();
  static MoveResult* default_instance_;
};
// -------------------------------------------------------------------

class MoveStopResult : public ::google::protobuf::Message {
 public:
  MoveStopResult();
  virtual ~MoveStopResult();

  MoveStopResult(const MoveStopResult& from);

  inline MoveStopResult& operator=(const MoveStopResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveStopResult& default_instance();

  void Swap(MoveStopResult* other);

  // implements Message ----------------------------------------------

  MoveStopResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoveStopResult& from);
  void MergeFrom(const MoveStopResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // required float position_x = 2;
  inline bool has_position_x() const;
  inline void clear_position_x();
  static const int kPositionXFieldNumber = 2;
  inline float position_x() const;
  inline void set_position_x(float value);

  // required float position_y = 3;
  inline bool has_position_y() const;
  inline void clear_position_y();
  static const int kPositionYFieldNumber = 3;
  inline float position_y() const;
  inline void set_position_y(float value);

  // @@protoc_insertion_point(class_scope:MoveStopResult)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_position_x();
  inline void clear_has_position_x();
  inline void set_has_position_y();
  inline void clear_has_position_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 player_id_;
  float position_x_;
  float position_y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_packet_5ftype_2eproto();
  friend void protobuf_AssignDesc_packet_5ftype_2eproto();
  friend void protobuf_ShutdownFile_packet_5ftype_2eproto();

  void InitAsDefaultInstance();
  static MoveStopResult* default_instance_;
};
// -------------------------------------------------------------------

class AttackKeyPressRequest : public ::google::protobuf::Message {
 public:
  AttackKeyPressRequest();
  virtual ~AttackKeyPressRequest();

  AttackKeyPressRequest(const AttackKeyPressRequest& from);

  inline AttackKeyPressRequest& operator=(const AttackKeyPressRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttackKeyPressRequest& default_instance();

  void Swap(AttackKeyPressRequest* other);

  // implements Message ----------------------------------------------

  AttackKeyPressRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttackKeyPressRequest& from);
  void MergeFrom(const AttackKeyPressRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool attack_key_mouse_left_press = 1;
  inline bool has_attack_key_mouse_left_press() const;
  inline void clear_attack_key_mouse_left_press();
  static const int kAttackKeyMouseLeftPressFieldNumber = 1;
  inline bool attack_key_mouse_left_press() const;
  inline void set_attack_key_mouse_left_press(bool value);

  // required float angle = 2;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 2;
  inline float angle() const;
  inline void set_angle(float value);

  // @@protoc_insertion_point(class_scope:AttackKeyPressRequest)
 private:
  inline void set_has_attack_key_mouse_left_press();
  inline void clear_has_attack_key_mouse_left_press();
  inline void set_has_angle();
  inline void clear_has_angle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool attack_key_mouse_left_press_;
  float angle_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_packet_5ftype_2eproto();
  friend void protobuf_AssignDesc_packet_5ftype_2eproto();
  friend void protobuf_ShutdownFile_packet_5ftype_2eproto();

  void InitAsDefaultInstance();
  static AttackKeyPressRequest* default_instance_;
};
// -------------------------------------------------------------------

class AttackBroadcastResult : public ::google::protobuf::Message {
 public:
  AttackBroadcastResult();
  virtual ~AttackBroadcastResult();

  AttackBroadcastResult(const AttackBroadcastResult& from);

  inline AttackBroadcastResult& operator=(const AttackBroadcastResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttackBroadcastResult& default_instance();

  void Swap(AttackBroadcastResult* other);

  // implements Message ----------------------------------------------

  AttackBroadcastResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttackBroadcastResult& from);
  void MergeFrom(const AttackBroadcastResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 attack_player_id = 1;
  inline bool has_attack_player_id() const;
  inline void clear_attack_player_id();
  static const int kAttackPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 attack_player_id() const;
  inline void set_attack_player_id(::google::protobuf::int32 value);

  // required float angle = 2;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 2;
  inline float angle() const;
  inline void set_angle(float value);

  // required int32 kind_of_attack = 3;
  inline bool has_kind_of_attack() const;
  inline void clear_kind_of_attack();
  static const int kKindOfAttackFieldNumber = 3;
  inline ::google::protobuf::int32 kind_of_attack() const;
  inline void set_kind_of_attack(::google::protobuf::int32 value);

  // required int32 damaged_player_count = 4;
  inline bool has_damaged_player_count() const;
  inline void clear_damaged_player_count();
  static const int kDamagedPlayerCountFieldNumber = 4;
  inline ::google::protobuf::int32 damaged_player_count() const;
  inline void set_damaged_player_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AttackBroadcastResult)
 private:
  inline void set_has_attack_player_id();
  inline void clear_has_attack_player_id();
  inline void set_has_angle();
  inline void clear_has_angle();
  inline void set_has_kind_of_attack();
  inline void clear_has_kind_of_attack();
  inline void set_has_damaged_player_count();
  inline void clear_has_damaged_player_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 attack_player_id_;
  float angle_;
  ::google::protobuf::int32 kind_of_attack_;
  ::google::protobuf::int32 damaged_player_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_packet_5ftype_2eproto();
  friend void protobuf_AssignDesc_packet_5ftype_2eproto();
  friend void protobuf_ShutdownFile_packet_5ftype_2eproto();

  void InitAsDefaultInstance();
  static AttackBroadcastResult* default_instance_;
};
// -------------------------------------------------------------------

class HPChangeResult : public ::google::protobuf::Message {
 public:
  HPChangeResult();
  virtual ~HPChangeResult();

  HPChangeResult(const HPChangeResult& from);

  inline HPChangeResult& operator=(const HPChangeResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPChangeResult& default_instance();

  void Swap(HPChangeResult* other);

  // implements Message ----------------------------------------------

  HPChangeResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPChangeResult& from);
  void MergeFrom(const HPChangeResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // required int32 player_hp = 2;
  inline bool has_player_hp() const;
  inline void clear_player_hp();
  static const int kPlayerHpFieldNumber = 2;
  inline ::google::protobuf::int32 player_hp() const;
  inline void set_player_hp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HPChangeResult)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_player_hp();
  inline void clear_has_player_hp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 player_id_;
  ::google::protobuf::int32 player_hp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_packet_5ftype_2eproto();
  friend void protobuf_AssignDesc_packet_5ftype_2eproto();
  friend void protobuf_ShutdownFile_packet_5ftype_2eproto();

  void InitAsDefaultInstance();
  static HPChangeResult* default_instance_;
};
// ===================================================================


// ===================================================================

// LoginRequest

// -------------------------------------------------------------------

// LoginResult

// required int32 player_id = 1;
inline bool LoginResult::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginResult::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginResult::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginResult::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 LoginResult::player_id() const {
  return player_id_;
}
inline void LoginResult::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// -------------------------------------------------------------------

// LoginBroadcastResult

// required int32 player_id = 1;
inline bool LoginBroadcastResult::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginBroadcastResult::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginBroadcastResult::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginBroadcastResult::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 LoginBroadcastResult::player_id() const {
  return player_id_;
}
inline void LoginBroadcastResult::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// required float position_x = 2;
inline bool LoginBroadcastResult::has_position_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginBroadcastResult::set_has_position_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginBroadcastResult::clear_has_position_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginBroadcastResult::clear_position_x() {
  position_x_ = 0;
  clear_has_position_x();
}
inline float LoginBroadcastResult::position_x() const {
  return position_x_;
}
inline void LoginBroadcastResult::set_position_x(float value) {
  set_has_position_x();
  position_x_ = value;
}

// required float position_y = 3;
inline bool LoginBroadcastResult::has_position_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginBroadcastResult::set_has_position_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginBroadcastResult::clear_has_position_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginBroadcastResult::clear_position_y() {
  position_y_ = 0;
  clear_has_position_y();
}
inline float LoginBroadcastResult::position_y() const {
  return position_y_;
}
inline void LoginBroadcastResult::set_position_y(float value) {
  set_has_position_y();
  position_y_ = value;
}

// required float velocity_x = 4;
inline bool LoginBroadcastResult::has_velocity_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginBroadcastResult::set_has_velocity_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginBroadcastResult::clear_has_velocity_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginBroadcastResult::clear_velocity_x() {
  velocity_x_ = 0;
  clear_has_velocity_x();
}
inline float LoginBroadcastResult::velocity_x() const {
  return velocity_x_;
}
inline void LoginBroadcastResult::set_velocity_x(float value) {
  set_has_velocity_x();
  velocity_x_ = value;
}

// required float velocity_y = 5;
inline bool LoginBroadcastResult::has_velocity_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginBroadcastResult::set_has_velocity_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginBroadcastResult::clear_has_velocity_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginBroadcastResult::clear_velocity_y() {
  velocity_y_ = 0;
  clear_has_velocity_y();
}
inline float LoginBroadcastResult::velocity_y() const {
  return velocity_y_;
}
inline void LoginBroadcastResult::set_velocity_y(float value) {
  set_has_velocity_y();
  velocity_y_ = value;
}

// required float angle = 6;
inline bool LoginBroadcastResult::has_angle() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LoginBroadcastResult::set_has_angle() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LoginBroadcastResult::clear_has_angle() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LoginBroadcastResult::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
inline float LoginBroadcastResult::angle() const {
  return angle_;
}
inline void LoginBroadcastResult::set_angle(float value) {
  set_has_angle();
  angle_ = value;
}

// required int32 color = 7;
inline bool LoginBroadcastResult::has_color() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LoginBroadcastResult::set_has_color() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LoginBroadcastResult::clear_has_color() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LoginBroadcastResult::clear_color() {
  color_ = 0;
  clear_has_color();
}
inline ::google::protobuf::int32 LoginBroadcastResult::color() const {
  return color_;
}
inline void LoginBroadcastResult::set_color(::google::protobuf::int32 value) {
  set_has_color();
  color_ = value;
}

// required int32 size = 8;
inline bool LoginBroadcastResult::has_size() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LoginBroadcastResult::set_has_size() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LoginBroadcastResult::clear_has_size() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LoginBroadcastResult::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 LoginBroadcastResult::size() const {
  return size_;
}
inline void LoginBroadcastResult::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
}

// -------------------------------------------------------------------

// ColorChangeRequest

// required int32 color = 1;
inline bool ColorChangeRequest::has_color() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ColorChangeRequest::set_has_color() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ColorChangeRequest::clear_has_color() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ColorChangeRequest::clear_color() {
  color_ = 0;
  clear_has_color();
}
inline ::google::protobuf::int32 ColorChangeRequest::color() const {
  return color_;
}
inline void ColorChangeRequest::set_color(::google::protobuf::int32 value) {
  set_has_color();
  color_ = value;
}

// -------------------------------------------------------------------

// ResponeBroadcastResult

// required int32 player_id = 1;
inline bool ResponeBroadcastResult::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResponeBroadcastResult::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResponeBroadcastResult::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResponeBroadcastResult::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 ResponeBroadcastResult::player_id() const {
  return player_id_;
}
inline void ResponeBroadcastResult::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// required float position_x = 2;
inline bool ResponeBroadcastResult::has_position_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResponeBroadcastResult::set_has_position_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResponeBroadcastResult::clear_has_position_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResponeBroadcastResult::clear_position_x() {
  position_x_ = 0;
  clear_has_position_x();
}
inline float ResponeBroadcastResult::position_x() const {
  return position_x_;
}
inline void ResponeBroadcastResult::set_position_x(float value) {
  set_has_position_x();
  position_x_ = value;
}

// required float position_y = 3;
inline bool ResponeBroadcastResult::has_position_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResponeBroadcastResult::set_has_position_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResponeBroadcastResult::clear_has_position_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResponeBroadcastResult::clear_position_y() {
  position_y_ = 0;
  clear_has_position_y();
}
inline float ResponeBroadcastResult::position_y() const {
  return position_y_;
}
inline void ResponeBroadcastResult::set_position_y(float value) {
  set_has_position_y();
  position_y_ = value;
}

// required float velocity_x = 4;
inline bool ResponeBroadcastResult::has_velocity_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResponeBroadcastResult::set_has_velocity_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResponeBroadcastResult::clear_has_velocity_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResponeBroadcastResult::clear_velocity_x() {
  velocity_x_ = 0;
  clear_has_velocity_x();
}
inline float ResponeBroadcastResult::velocity_x() const {
  return velocity_x_;
}
inline void ResponeBroadcastResult::set_velocity_x(float value) {
  set_has_velocity_x();
  velocity_x_ = value;
}

// required float velocity_y = 5;
inline bool ResponeBroadcastResult::has_velocity_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ResponeBroadcastResult::set_has_velocity_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ResponeBroadcastResult::clear_has_velocity_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ResponeBroadcastResult::clear_velocity_y() {
  velocity_y_ = 0;
  clear_has_velocity_y();
}
inline float ResponeBroadcastResult::velocity_y() const {
  return velocity_y_;
}
inline void ResponeBroadcastResult::set_velocity_y(float value) {
  set_has_velocity_y();
  velocity_y_ = value;
}

// required float angle = 6;
inline bool ResponeBroadcastResult::has_angle() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ResponeBroadcastResult::set_has_angle() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ResponeBroadcastResult::clear_has_angle() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ResponeBroadcastResult::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
inline float ResponeBroadcastResult::angle() const {
  return angle_;
}
inline void ResponeBroadcastResult::set_angle(float value) {
  set_has_angle();
  angle_ = value;
}

// required int32 color = 7;
inline bool ResponeBroadcastResult::has_color() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ResponeBroadcastResult::set_has_color() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ResponeBroadcastResult::clear_has_color() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ResponeBroadcastResult::clear_color() {
  color_ = 0;
  clear_has_color();
}
inline ::google::protobuf::int32 ResponeBroadcastResult::color() const {
  return color_;
}
inline void ResponeBroadcastResult::set_color(::google::protobuf::int32 value) {
  set_has_color();
  color_ = value;
}

// required int32 size = 8;
inline bool ResponeBroadcastResult::has_size() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ResponeBroadcastResult::set_has_size() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ResponeBroadcastResult::clear_has_size() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ResponeBroadcastResult::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 ResponeBroadcastResult::size() const {
  return size_;
}
inline void ResponeBroadcastResult::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
}

// -------------------------------------------------------------------

// AngleChangeRequest

// required float angle = 1;
inline bool AngleChangeRequest::has_angle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AngleChangeRequest::set_has_angle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AngleChangeRequest::clear_has_angle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AngleChangeRequest::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
inline float AngleChangeRequest::angle() const {
  return angle_;
}
inline void AngleChangeRequest::set_angle(float value) {
  set_has_angle();
  angle_ = value;
}

// -------------------------------------------------------------------

// AngleChangeBroadcastResult

// required int32 player_id = 1;
inline bool AngleChangeBroadcastResult::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AngleChangeBroadcastResult::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AngleChangeBroadcastResult::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AngleChangeBroadcastResult::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 AngleChangeBroadcastResult::player_id() const {
  return player_id_;
}
inline void AngleChangeBroadcastResult::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// required float angle = 2;
inline bool AngleChangeBroadcastResult::has_angle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AngleChangeBroadcastResult::set_has_angle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AngleChangeBroadcastResult::clear_has_angle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AngleChangeBroadcastResult::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
inline float AngleChangeBroadcastResult::angle() const {
  return angle_;
}
inline void AngleChangeBroadcastResult::set_angle(float value) {
  set_has_angle();
  angle_ = value;
}

// -------------------------------------------------------------------

// MoveKeyPressRequest

// required bool move_key_w_press = 1;
inline bool MoveKeyPressRequest::has_move_key_w_press() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveKeyPressRequest::set_has_move_key_w_press() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveKeyPressRequest::clear_has_move_key_w_press() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveKeyPressRequest::clear_move_key_w_press() {
  move_key_w_press_ = false;
  clear_has_move_key_w_press();
}
inline bool MoveKeyPressRequest::move_key_w_press() const {
  return move_key_w_press_;
}
inline void MoveKeyPressRequest::set_move_key_w_press(bool value) {
  set_has_move_key_w_press();
  move_key_w_press_ = value;
}

// required bool move_key_a_press = 2;
inline bool MoveKeyPressRequest::has_move_key_a_press() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoveKeyPressRequest::set_has_move_key_a_press() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoveKeyPressRequest::clear_has_move_key_a_press() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoveKeyPressRequest::clear_move_key_a_press() {
  move_key_a_press_ = false;
  clear_has_move_key_a_press();
}
inline bool MoveKeyPressRequest::move_key_a_press() const {
  return move_key_a_press_;
}
inline void MoveKeyPressRequest::set_move_key_a_press(bool value) {
  set_has_move_key_a_press();
  move_key_a_press_ = value;
}

// required bool move_key_s_press = 3;
inline bool MoveKeyPressRequest::has_move_key_s_press() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MoveKeyPressRequest::set_has_move_key_s_press() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MoveKeyPressRequest::clear_has_move_key_s_press() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MoveKeyPressRequest::clear_move_key_s_press() {
  move_key_s_press_ = false;
  clear_has_move_key_s_press();
}
inline bool MoveKeyPressRequest::move_key_s_press() const {
  return move_key_s_press_;
}
inline void MoveKeyPressRequest::set_move_key_s_press(bool value) {
  set_has_move_key_s_press();
  move_key_s_press_ = value;
}

// required bool move_key_d_press = 4;
inline bool MoveKeyPressRequest::has_move_key_d_press() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MoveKeyPressRequest::set_has_move_key_d_press() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MoveKeyPressRequest::clear_has_move_key_d_press() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MoveKeyPressRequest::clear_move_key_d_press() {
  move_key_d_press_ = false;
  clear_has_move_key_d_press();
}
inline bool MoveKeyPressRequest::move_key_d_press() const {
  return move_key_d_press_;
}
inline void MoveKeyPressRequest::set_move_key_d_press(bool value) {
  set_has_move_key_d_press();
  move_key_d_press_ = value;
}

// -------------------------------------------------------------------

// MoveResult

// required int32 player_id = 1;
inline bool MoveResult::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveResult::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveResult::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveResult::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 MoveResult::player_id() const {
  return player_id_;
}
inline void MoveResult::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// required float position_x = 2;
inline bool MoveResult::has_position_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoveResult::set_has_position_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoveResult::clear_has_position_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoveResult::clear_position_x() {
  position_x_ = 0;
  clear_has_position_x();
}
inline float MoveResult::position_x() const {
  return position_x_;
}
inline void MoveResult::set_position_x(float value) {
  set_has_position_x();
  position_x_ = value;
}

// required float position_y = 3;
inline bool MoveResult::has_position_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MoveResult::set_has_position_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MoveResult::clear_has_position_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MoveResult::clear_position_y() {
  position_y_ = 0;
  clear_has_position_y();
}
inline float MoveResult::position_y() const {
  return position_y_;
}
inline void MoveResult::set_position_y(float value) {
  set_has_position_y();
  position_y_ = value;
}

// required float velocity_x = 4;
inline bool MoveResult::has_velocity_x() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MoveResult::set_has_velocity_x() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MoveResult::clear_has_velocity_x() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MoveResult::clear_velocity_x() {
  velocity_x_ = 0;
  clear_has_velocity_x();
}
inline float MoveResult::velocity_x() const {
  return velocity_x_;
}
inline void MoveResult::set_velocity_x(float value) {
  set_has_velocity_x();
  velocity_x_ = value;
}

// required float velocity_y = 5;
inline bool MoveResult::has_velocity_y() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MoveResult::set_has_velocity_y() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MoveResult::clear_has_velocity_y() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MoveResult::clear_velocity_y() {
  velocity_y_ = 0;
  clear_has_velocity_y();
}
inline float MoveResult::velocity_y() const {
  return velocity_y_;
}
inline void MoveResult::set_velocity_y(float value) {
  set_has_velocity_y();
  velocity_y_ = value;
}

// -------------------------------------------------------------------

// MoveStopResult

// required int32 player_id = 1;
inline bool MoveStopResult::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveStopResult::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveStopResult::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveStopResult::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 MoveStopResult::player_id() const {
  return player_id_;
}
inline void MoveStopResult::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// required float position_x = 2;
inline bool MoveStopResult::has_position_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoveStopResult::set_has_position_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoveStopResult::clear_has_position_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoveStopResult::clear_position_x() {
  position_x_ = 0;
  clear_has_position_x();
}
inline float MoveStopResult::position_x() const {
  return position_x_;
}
inline void MoveStopResult::set_position_x(float value) {
  set_has_position_x();
  position_x_ = value;
}

// required float position_y = 3;
inline bool MoveStopResult::has_position_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MoveStopResult::set_has_position_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MoveStopResult::clear_has_position_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MoveStopResult::clear_position_y() {
  position_y_ = 0;
  clear_has_position_y();
}
inline float MoveStopResult::position_y() const {
  return position_y_;
}
inline void MoveStopResult::set_position_y(float value) {
  set_has_position_y();
  position_y_ = value;
}

// -------------------------------------------------------------------

// AttackKeyPressRequest

// required bool attack_key_mouse_left_press = 1;
inline bool AttackKeyPressRequest::has_attack_key_mouse_left_press() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttackKeyPressRequest::set_has_attack_key_mouse_left_press() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttackKeyPressRequest::clear_has_attack_key_mouse_left_press() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttackKeyPressRequest::clear_attack_key_mouse_left_press() {
  attack_key_mouse_left_press_ = false;
  clear_has_attack_key_mouse_left_press();
}
inline bool AttackKeyPressRequest::attack_key_mouse_left_press() const {
  return attack_key_mouse_left_press_;
}
inline void AttackKeyPressRequest::set_attack_key_mouse_left_press(bool value) {
  set_has_attack_key_mouse_left_press();
  attack_key_mouse_left_press_ = value;
}

// required float angle = 2;
inline bool AttackKeyPressRequest::has_angle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttackKeyPressRequest::set_has_angle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttackKeyPressRequest::clear_has_angle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttackKeyPressRequest::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
inline float AttackKeyPressRequest::angle() const {
  return angle_;
}
inline void AttackKeyPressRequest::set_angle(float value) {
  set_has_angle();
  angle_ = value;
}

// -------------------------------------------------------------------

// AttackBroadcastResult

// required int32 attack_player_id = 1;
inline bool AttackBroadcastResult::has_attack_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttackBroadcastResult::set_has_attack_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttackBroadcastResult::clear_has_attack_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttackBroadcastResult::clear_attack_player_id() {
  attack_player_id_ = 0;
  clear_has_attack_player_id();
}
inline ::google::protobuf::int32 AttackBroadcastResult::attack_player_id() const {
  return attack_player_id_;
}
inline void AttackBroadcastResult::set_attack_player_id(::google::protobuf::int32 value) {
  set_has_attack_player_id();
  attack_player_id_ = value;
}

// required float angle = 2;
inline bool AttackBroadcastResult::has_angle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttackBroadcastResult::set_has_angle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttackBroadcastResult::clear_has_angle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttackBroadcastResult::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
inline float AttackBroadcastResult::angle() const {
  return angle_;
}
inline void AttackBroadcastResult::set_angle(float value) {
  set_has_angle();
  angle_ = value;
}

// required int32 kind_of_attack = 3;
inline bool AttackBroadcastResult::has_kind_of_attack() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AttackBroadcastResult::set_has_kind_of_attack() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AttackBroadcastResult::clear_has_kind_of_attack() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AttackBroadcastResult::clear_kind_of_attack() {
  kind_of_attack_ = 0;
  clear_has_kind_of_attack();
}
inline ::google::protobuf::int32 AttackBroadcastResult::kind_of_attack() const {
  return kind_of_attack_;
}
inline void AttackBroadcastResult::set_kind_of_attack(::google::protobuf::int32 value) {
  set_has_kind_of_attack();
  kind_of_attack_ = value;
}

// required int32 damaged_player_count = 4;
inline bool AttackBroadcastResult::has_damaged_player_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AttackBroadcastResult::set_has_damaged_player_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AttackBroadcastResult::clear_has_damaged_player_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AttackBroadcastResult::clear_damaged_player_count() {
  damaged_player_count_ = 0;
  clear_has_damaged_player_count();
}
inline ::google::protobuf::int32 AttackBroadcastResult::damaged_player_count() const {
  return damaged_player_count_;
}
inline void AttackBroadcastResult::set_damaged_player_count(::google::protobuf::int32 value) {
  set_has_damaged_player_count();
  damaged_player_count_ = value;
}

// -------------------------------------------------------------------

// HPChangeResult

// required int32 player_id = 1;
inline bool HPChangeResult::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPChangeResult::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPChangeResult::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPChangeResult::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 HPChangeResult::player_id() const {
  return player_id_;
}
inline void HPChangeResult::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// required int32 player_hp = 2;
inline bool HPChangeResult::has_player_hp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HPChangeResult::set_has_player_hp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HPChangeResult::clear_has_player_hp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HPChangeResult::clear_player_hp() {
  player_hp_ = 0;
  clear_has_player_hp();
}
inline ::google::protobuf::int32 HPChangeResult::player_hp() const {
  return player_hp_;
}
inline void HPChangeResult::set_player_hp(::google::protobuf::int32 value) {
  set_has_player_hp();
  player_hp_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_packet_5ftype_2eproto__INCLUDED
